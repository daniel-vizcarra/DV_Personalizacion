// <auto-generated />
using DV_MvcApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DV_MvcApp.Migrations
{
    [DbContext(typeof(DV_Context))]
    partial class DV_ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DV_MvcApp.Models.DV_Author", b =>
                {
                    b.Property<int>("DV_AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DV_AuthorId"));

                    b.Property<string>("DV_FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DV_LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DV_AuthorId");

                    b.ToTable("DV_Authors");
                });

            modelBuilder.Entity("DV_MvcApp.Models.DV_Book", b =>
                {
                    b.Property<int>("DV_BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DV_BookId"));

                    b.Property<int>("DV_AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("DV_Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DV_BookId");

                    b.HasIndex("DV_AuthorId");

                    b.ToTable("DV_Books");
                });

            modelBuilder.Entity("DV_MvcApp.Models.DV_Book", b =>
                {
                    b.HasOne("DV_MvcApp.Models.DV_Author", "DV_Author")
                        .WithMany("DV_Books")
                        .HasForeignKey("DV_AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DV_Author");
                });

            modelBuilder.Entity("DV_MvcApp.Models.DV_Author", b =>
                {
                    b.Navigation("DV_Books");
                });
#pragma warning restore 612, 618
        }
    }
}
